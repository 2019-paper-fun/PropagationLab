
package plugins.ferreol.propagationlab;

import icy.sequence.Sequence;
import mitiv.array.ShapedArray;
import plugins.adufour.blocks.lang.Block;
import plugins.adufour.blocks.util.VarList;
import plugins.adufour.ezplug.EzPlug;
import plugins.adufour.ezplug.EzStoppable;
import plugins.adufour.ezplug.EzVarBoolean;
import plugins.adufour.ezplug.EzVarSequence;
import plugins.mitiv.io.Icy2TiPi;
import plugins.mitiv.io.IcyImager;

public class FourierTransform  extends EzPlug  implements Block, EzStoppable{
    protected EzVarSequence input;
    protected Sequence inputSequence;
    protected ShapedArray inputArray;
    protected EzVarSequence output;
    protected Sequence outputSequence;
    protected EzVarBoolean    direction;


    @Override
    protected void initialize()
    {
        if (!isHeadLess()) {
            getUI().setParametersIOVisible(false);
            //    getUI().setActionPanelVisible(false);
        }
        input = new EzVarSequence("input");
        input.setToolTipText("input with real and imaginary part in channel 0 and 1 respectively");
        direction = new EzVarBoolean("Backward", false);
        direction.setToolTipText("Direction of the transform (backward if checked");
        addEzComponent(input);
        addEzComponent(direction);
        if (isHeadLess()) {
            output = new EzVarSequence("Output Image");
        }
    }
    @Override
    protected void execute() {
        Sequence inputSequence = input.getValue();
        inputArray = Icy2TiPi.sequenceToArray(inputSequence);

        inputArray=  inputArray.movedims(2, 0);
        // DoubleFFT_2D FFT2D = new DoubleFFT_2D(Nx, Ny);

        IcyImager.show(inputArray,outputSequence,0,"Fourier transform of"+inputSequence.getName(), isHeadLess() );

        if (isHeadLess()) {
            output.setValue(outputSequence);
        }
    }

    @Override
    public void clean() {
        // TODO Auto-generated by Icy4Eclipse
    }
    /* (non-Javadoc)
     * @see plugins.adufour.blocks.lang.Block#declareInput(plugins.adufour.blocks.util.VarList)
     */
    @Override
    public void declareInput(VarList inputMap) {
        // TODO Auto-generated method stub

    }
    /* (non-Javadoc)
     * @see plugins.adufour.blocks.lang.Block#declareOutput(plugins.adufour.blocks.util.VarList)
     */
    @Override
    public void declareOutput(VarList outputMap) {
        // TODO Auto-generated method stub

    }

}
